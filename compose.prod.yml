version: "3.9"
services:
  api:
    image: ${PROJECT_NAME}/api
    build: ./api
    restart: unless-stopped
    depends_on:
      - db
      - redis
    env_file: .env
    environment:
      WEB: ${PROTOCOL}://${EXTERNAL_HOST}/
    volumes:
      - ${DATA_PATH}/load:/data/load
      - ${DATA_PATH}/backup:/backup
      - ./scripts:/app/scripts
      # For logs
      - ${DATA_PATH}/logs/api.err:/app/app.err
      - ${DATA_PATH}/logs/api.log:/app/app.log
      # For monitoring
      - /proc/cpuinfo:/proc/cpuinfo:ro
    ports:
      - ${API_PORT}:5000
    command: bash -c "cd /app && uvicorn app:app --host 0.0.0.0 --port 5000 --proxy-headers"
    # healthcheck:
    #   test: "curl --fail http://0.0.0.0:5000/"
    #   interval: 1s
    #   timeout: 1s
    #   start_period: 180s
    #   retries: 180

  jobs:
    image: ${PROJECT_NAME}/jobs
    build: ./api
    restart: unless-stopped
    depends_on:
      - db
      - redis
    env_file: .env
    environment:
      API: ${PROTOCOL}://${EXTERNAL_HOST}/api/
      WEB: ${PROTOCOL}://${EXTERNAL_HOST}/
    volumes:
      # For logs
      - ${DATA_PATH}/logs/jobs.err:/app/app.err
      - ${DATA_PATH}/logs/jobs.log:/app/app.log
      # For sitemap
      - ${DATA_PATH}/sitemaps:/data/sitemaps
      - ${DATA_PATH}/sitemap.xml:/data/sitemap.xml
      - ${DATA_PATH}/robots.txt:/data/robots.txt
    command: bash -c "cd /app && python job.py"

  tg:
    image: ${PROJECT_NAME}/tg
    build: ./tg
    restart: unless-stopped
    env_file: .env
    environment:
      API: ${PROTOCOL}://${EXTERNAL_HOST}/api/
      WEB: ${PROTOCOL}://${EXTERNAL_HOST}/
      TG: ${PROTOCOL}://${EXTERNAL_HOST}/tg/
    volumes:
      # For logs
      - ${DATA_PATH}/logs/tg.err:/app/app.err
      - ${DATA_PATH}/logs/tg.log:/app/app.log
    depends_on:
      - api
      - redis
    ports:
      - ${TG_PORT}:80

  web:
    image: ${PROJECT_NAME}/web
    build: ./web
    restart: unless-stopped
    env_file: .env
    environment:
      NEXT_PUBLIC_API: ${PROTOCOL}://${EXTERNAL_HOST}/api/
      NEXT_PUBLIC_WEB: ${PROTOCOL}://${EXTERNAL_HOST}/
      NEXT_PUBLIC_NAME: ${NAME}
      NEXT_PUBLIC_LOCALE: ${LOCALE}
      NEXT_PUBLIC_GOOGLE_ID: ${GOOGLE_ID}
      NEXT_PUBLIC_VK_ID: ${VK_ID}
      NEXT_PUBLIC_GOOGLE_MAPS_KEY: ${GOOGLE_MAPS_KEY}
      NEXT_PUBLIC_GOOGLE_MAPS_LAT: ${GOOGLE_MAPS_LAT}
      NEXT_PUBLIC_GOOGLE_MAPS_LNG: ${GOOGLE_MAPS_LNG}
      NEXT_PUBLIC_GOOGLE_MAPS_ZOOM: ${GOOGLE_MAPS_ZOOM}
      NEXT_PUBLIC_TG_BOT: ${TG_BOT}
      NEXT_PUBLIC_ANALYTICS_SHEET: ${ANALYTICS_SHEET}
    ports:
      - ${WEB_PORT}:3000
    command: bash -c "npm run build && npm start"
